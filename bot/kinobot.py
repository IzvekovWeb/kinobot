import telebot
from telebot import types

from bot.config import TELEGRAM_TOKEN
from bot.utils.keyboard import generate_markup
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from db.Users import User

bot = telebot.TeleBot(TELEGRAM_TOKEN)


def start_bot():
    bot.infinity_polling()
    bot.stop_bot()


commands = {
    "start": ["/start"],
    "kino": ["/kino", "–ü–æ–µ—Ö–∞–ª–∏!"],
    "add_to_favorite": ["/add_to_favorite"],
    "show_favorite": ["/show_favorite"],
    "delete_from_favorite": ["/delete_from_favorite"],
    "info": ["/info"],
}


@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    user_name = message.from_user.username
    chat_id = message.chat.id

    user = User(user_id, user_name, chat_id)
    markup = None
    if user.is_exist():
        hello_msg = f"‚úÖ –¢–∞–∫, –≤—ã —É–∂–µ –µ—Å—Ç—å –≤ –Ω–∞—à–µ–π –±–∞–∑–µ, –¥–∞–≤–∞–π—Ç–µ –≤—ã–±–∏—Ä–∞—Ç—å —Ñ–∏–ª—å–º—ã, –≥–æ—Ç–æ–≤—ã? /kino"

        btn = KeyboardButton('–ü–æ–µ—Ö–∞–ª–∏!')

        markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add(btn)
    else:
        hello_msg = f"üé¨ –ö–∏–Ω–æ–±–æ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è, {user_name}!\n" \
                    f"üé¨ –Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —Ñ–∏–ª—å–º—ã,\n–∞ —Ç—ã –≤—ã–±–∏—Ä–∞–π –∫–∞–∫–∏–µ –∏–∑ –Ω–∏—Ö —Ö–æ—Ç–µ–ª –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å!\n" \
                    f"üé¨ –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞–ø–∏—à–∏ /info" \
                    f"\n\n <b>–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /kino </b>"
        user.add()

    bot.send_message(chat_id, hello_msg, parse_mode='HTML', reply_markup=markup)


@bot.message_handler(commands=['kino'])
def kino(message):
    user_id = message['from_user']['id']
    user_name = message['from_user']['username']
    chat_id = message['chat']['id']
    bot.send_message(chat_id, "–ö–∏–Ω–æ", parse_mode='HTML')


@bot.message_handler(content_types=['text'])
def text_handler(message):

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ –∫–æ–º–∞–Ω–¥—ã
    for key, val in commands.items():
        if message.text in val:
            command = key
            break
    func = f"{command}({message})"
    eval(func)



@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    print(call)
    print(call.message)
    print(call.data)
    if call.message:
        if call.data == "test":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ü—ã—â—å")


@bot.message_handler(commands=['info'])
def start(message):
    chat_id = message.chat.id
    msg = f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n ‚û°Ô∏è /kino - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤—ã–µ —Ñ–∏–ª—å–º—ã\n" \
                f" ‚û°Ô∏è /add_to_favorite - –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é\n" \
                f" ‚û°Ô∏è /show_favorite - –ø–æ–∫–∞–∑–∞—Ç—å –º–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é\n" \
                f" ‚û°Ô∏è /delete_from_favorite - —É–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏\n" \
                f" ‚û°Ô∏è /info - –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"
    bot.send_message(chat_id, msg)
